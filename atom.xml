<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YuDong&#39;s Daily</title>
  
  <subtitle>My daily about the Competitive Programming (CP)</subtitle>
  <link href="http://yudong-0222.github.io/atom.xml" rel="self"/>
  
  <link href="http://yudong-0222.github.io/"/>
  <updated>2023-01-02T12:10:49.063Z</updated>
  <id>http://yudong-0222.github.io/</id>
  
  <author>
    <name>YuDong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kattis-Prva</title>
    <link href="http://yudong-0222.github.io/post/cpp4"/>
    <id>http://yudong-0222.github.io/post/cpp4</id>
    <published>2023-01-02T09:41:27.000Z</published>
    <updated>2023-01-02T12:10:49.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目-Kattis-Prva"><a href="#題目-Kattis-Prva" class="headerlink" title="題目: Kattis - Prva"></a>題目: Kattis - Prva</h1><p>出處: (<a class="link" href="https://open.kattis.com/problems/prva">https://open.kattis.com/problems/prva<i class="fa-solid fa-up-right-from-square"></i></a>)</p><p>有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="6.11ex" height="1.136ex" role="img" focusable="false" viewBox="0 -491 2700.4 502"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(1822.4,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 個格子，每個格子有些是字有些是# (代表被阻擋)。<br>我們要以 <em>一行</em> 或以 <em>一列</em> 去搜尋最短字詞(2個字)。</p><h2 id="解題方法"><a href="#解題方法" class="headerlink" title="解題方法:"></a>解題方法:</h2><p>輸入 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="6.11ex" height="1.136ex" role="img" focusable="false" viewBox="0 -491 2700.4 502"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(1822.4,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 之後，我先找 <em>一列</em>，再找 <em>一行</em>。<br>我們需要一個 <em>字串s</em>，存放我們要找的東西。</p><p>大概如下:</p><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">  <span class="type">int</span> n,m;</span><br><span class="line">  string s[<span class="number">25</span>];</span><br><span class="line">  cin &gt;&gt; n &gt;&gt;m;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) {</span><br><span class="line">    cin &gt;&gt; s[i];</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>然後先從 <em>一列</em> 開始搜尋。<br>找 <strong>如果不是#的</strong><br>因為這樣，我們需要兩個字串</p><ol><li>答案 ans</li><li>臨時字串 temp</li></ol><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">  <span class="type">int</span> n,m;</span><br><span class="line">  string s[<span class="number">25</span>];</span><br><span class="line">  cin &gt;&gt; n &gt;&gt;m;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) {</span><br><span class="line">    cin &gt;&gt; s[i];</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line"><span class="comment">//接續上</span></span><br><span class="line">  string ans=<span class="string">""</span>,temp = <span class="string">""</span>;</span><br><span class="line">   <span class="comment">//跟ans一樣初始化 (空字串)。</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) {</span><br><span class="line">    temp = <span class="string">""</span>; <span class="comment">//迴圈要初始化，不然他不會清空。你可以選擇放在迴圈裡初始化就好`</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++) {</span><br><span class="line">      <span class="keyword">if</span>(s[i][j] != <span class="string">'#'</span>) {</span><br><span class="line">        temp = temp + s[i][j];</span><br><span class="line">        <span class="keyword">continue</span>; </span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>接下來判斷temp是否有 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.28ex" height="1.692ex" role="img" focusable="false" viewBox="0 -666 2333.8 748"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><g data-mml-node="text"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="text" transform="translate(778,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g></g><g data-mml-node="mn" transform="translate(1833.8,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container> 否則他不是一個字<br>如果有再判斷ans是否為空的<br>如果是，就令ans = temp<br>不是的話 比較ans 與 temp中<br>ans是否有比temp長<br>如果有，則另ans = temp<br>如果沒有 ，初始化temp<br>出迴圈，再做一次判斷的部分</p><p>具體做法如下:</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">  <span class="type">int</span> n,m;</span><br><span class="line">  string s[<span class="number">25</span>];</span><br><span class="line">  cin &gt;&gt; n &gt;&gt;m;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) {</span><br><span class="line">    cin &gt;&gt; s[i];</span><br><span class="line">  }</span><br><span class="line">  string ans=<span class="string">""</span>,temp = <span class="string">""</span>;</span><br><span class="line">   <span class="comment">//跟ans一樣初始化 (空字串)。</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) {</span><br><span class="line">    temp = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++) {</span><br><span class="line">      <span class="keyword">if</span>(s[i][j] != <span class="string">'#'</span>) {</span><br><span class="line">        temp = temp + s[i][j];</span><br><span class="line">        <span class="keyword">continue</span>; </span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(temp.<span class="built_in">length</span>() &gt;=<span class="number">2</span>) {</span><br><span class="line">        <span class="keyword">if</span>(ans == <span class="string">""</span> ) {</span><br><span class="line">          ans =temp;</span><br><span class="line">          temp = <span class="string">""</span>;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(ans &gt; temp) ans = temp;</span><br><span class="line">      }</span><br><span class="line">    } <span class="comment">//出迴圈</span></span><br><span class="line">    <span class="keyword">if</span>(temp.<span class="built_in">length</span>() &gt;=<span class="number">2</span> ){</span><br><span class="line">      <span class="keyword">if</span>(ans == <span class="string">""</span>) {</span><br><span class="line">        ans = temp;</span><br><span class="line">        temp = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span> (ans &gt; temp) ans = temp;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>最後一步: 找 <em>一行</em> 的部分。<br>與列同理，只是將 <code>for迴圈的i j 調轉過來</code></p><p>完整code:</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">  <span class="type">int</span> n,m;</span><br><span class="line">  cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">  string s[<span class="number">25</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) {</span><br><span class="line">    cin &gt;&gt; s[i];</span><br><span class="line">  }</span><br><span class="line">  string temp,ans=<span class="string">""</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) {</span><br><span class="line">    temp = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++) {</span><br><span class="line">      <span class="keyword">if</span>(s[i][j] != <span class="string">'#'</span>) {</span><br><span class="line">        temp = temp + s[i][j];</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(temp.<span class="built_in">length</span>() &gt;=<span class="number">2</span>) {</span><br><span class="line">        <span class="keyword">if</span>(ans == <span class="string">""</span>) {</span><br><span class="line">          ans = temp;</span><br><span class="line">          temp = <span class="string">""</span>;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(ans &gt; temp) ans = temp;</span><br><span class="line">      }</span><br><span class="line">      temp = <span class="string">""</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(temp.<span class="built_in">length</span>() &gt;= <span class="number">2</span>) {</span><br><span class="line">      <span class="keyword">if</span>(ans == <span class="string">""</span>) {</span><br><span class="line">        ans = temp;</span><br><span class="line">        temp = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(ans &gt; temp ) ans = temp;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">//行</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++) {</span><br><span class="line">    string temp = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) {</span><br><span class="line">      <span class="keyword">if</span>(s[i][j] != <span class="string">'#'</span>) {</span><br><span class="line">        temp = temp + s[i][j];</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(temp.<span class="built_in">length</span>() &gt;=<span class="number">2</span>) {</span><br><span class="line">        <span class="keyword">if</span>(ans ==<span class="string">""</span>) {</span><br><span class="line">          ans = temp;</span><br><span class="line">          temp = <span class="string">""</span>;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(ans &gt; temp) ans = temp;</span><br><span class="line">      }</span><br><span class="line">      temp = <span class="string">""</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(temp.<span class="built_in">length</span>() &gt;=<span class="number">2</span>) {</span><br><span class="line">      <span class="keyword">if</span>(ans ==<span class="string">""</span>) {</span><br><span class="line">        ans = temp;</span><br><span class="line">        temp = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span>(ans &gt; temp ) ans = temp;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><p><code>註:</code></p><ul><li>continue是為了讓temp繼續收集字，不然只有一個字的話就不會進去下面的判斷。</li><li>注意出迴圈的部分。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;題目-Kattis-Prva&quot;&gt;&lt;a href=&quot;#題目-Kattis-Prva&quot; class=&quot;headerlink&quot; title=&quot;題目: Kattis - Prva&quot;&gt;&lt;/a&gt;題目: Kattis - Prva&lt;/h1&gt;&lt;p&gt;出處: (&lt;a class=&quot;l</summary>
      
    
    
    
    <category term="演算法筆記" scheme="http://yudong-0222.github.io/categories/%E6%BC%94%E7%AE%97%E6%B3%95%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="競程" scheme="http://yudong-0222.github.io/tags/%E7%AB%B6%E7%A8%8B/"/>
    
    <category term="題解" scheme="http://yudong-0222.github.io/tags/%E9%A1%8C%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>南大附中資訊研究社 － 創辦計畫</title>
    <link href="http://yudong-0222.github.io/post/tntcsh_csirc"/>
    <id>http://yudong-0222.github.io/post/tntcsh_csirc</id>
    <published>2022-12-25T14:40:24.000Z</published>
    <updated>2022-12-25T14:51:33.888Z</updated>
    
    <content type="html"><![CDATA[<h1 id="社團創辦計畫"><a href="#社團創辦計畫" class="headerlink" title="社團創辦計畫"></a>社團創辦計畫</h1><p>鑒於國立南大附中真的對於資訊這方面沒有甚麼培訓之類的。<br>我將要在這創建一個社團，讓資訊種子在南大附中開花</p><h2 id="社團創辦計畫書"><a href="#社團創辦計畫書" class="headerlink" title="社團創辦計畫書"></a><a class="link"   href="https://hackmd.io/@yudong/tntcsh_csirc" >社團創辦計畫書<i class="fa-solid fa-up-right-from-square"></i></a></h2><p>:D 上面是社團創辦計畫書 第一版。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;社團創辦計畫&quot;&gt;&lt;a href=&quot;#社團創辦計畫&quot; class=&quot;headerlink&quot; title=&quot;社團創辦計畫&quot;&gt;&lt;/a&gt;社團創辦計畫&lt;/h1&gt;&lt;p&gt;鑒於國立南大附中真的對於資訊這方面沒有甚麼培訓之類的。&lt;br&gt;我將要在這創建一個社團，讓資訊種子在南大附中開</summary>
      
    
    
    
    <category term="其他" scheme="http://yudong-0222.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="社團" scheme="http://yudong-0222.github.io/tags/%E7%A4%BE%E5%9C%98/"/>
    
  </entry>
  
  <entry>
    <title>巢狀迴圈－三角形繪製２</title>
    <link href="http://yudong-0222.github.io/post/cpp3"/>
    <id>http://yudong-0222.github.io/post/cpp3</id>
    <published>2022-11-08T11:19:10.000Z</published>
    <updated>2023-01-02T10:07:45.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="題目"><a href="#題目" class="headerlink" title="題目:"></a>題目:</h1><h4 id="出處：SA-流-C-競程修練心法"><a href="#出處：SA-流-C-競程修練心法" class="headerlink" title="出處：SA 流 C++ 競程修練心法"></a>出處：<a class="link"   href="https://hackmd.io/@sa072686/cp/%2F%40sa072686%2FrJpY0i7PS" >SA 流 C++ 競程修練心法<i class="fa-solid fa-up-right-from-square"></i></a></h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/images/tanco.png"                                     ></p><h2 id="思考方法："><a href="#思考方法：" class="headerlink" title="思考方法："></a>思考方法：</h2><p>我先以 <code>輸出3個#</code> 為例子，下去推想。</p><blockquote><p>輸出 1 個 #<br>輸出 2 個 #<br>輸出 3 個 #<br>輸出 2 個 #<br>輸出 1 個 #</p></blockquote><p>分成 <code>兩層來輸出</code> 的話 則：</p><h4 id="第一層"><a href="#第一層" class="headerlink" title="第一層"></a>第一層</h4><blockquote><p>輸出 １ 個 #<br>輸出 ２ 個 #<br>輸出 ３ 個 #</p></blockquote><h4 id="第二層"><a href="#第二層" class="headerlink" title="第二層"></a>第二層</h4><blockquote><p>輸出 ２ 個 #<br>輸出 １ 個 #</p></blockquote><h4 id="再來假設環節，"><a href="#再來假設環節，" class="headerlink" title="再來假設環節，"></a>再來假設環節，</h4><p>要做n次，所以 <code>第一層的迴圈</code> 即為 <strong>遞增</strong>：</p><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n;i++&gt;) &#123;</span><br><span class="line">    <span class="comment">//進來迴圈 → 輸出i個 # → 輸出換行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>再來，是 # 的部分<br>所以：</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++&gt;) &#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;#&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="合體，第一層就完成了！"><a href="#合體，第一層就完成了！" class="headerlink" title="合體，第一層就完成了！"></a>合體，第一層就完成了！</h4><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n;i++&gt;) &#123;</span><br><span class="line">    <span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;i;j++&gt;) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;#&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>而當我們達到 <code>輸出 n 次</code> 的 # 時<br>我們要倒回去 ， 即為 <strong>遞減</strong></p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=n;i&gt;<span class="number">0</span>;i--) &#123;</span><br><span class="line">    <span class="comment">// 進入迴圈 → 輸出(n-1)個 → 輸出換行</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>接著處理 <code>輸出 (n-1) 個 #</code></p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;i;j++&gt;) &#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;#&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="合體！"><a href="#合體！" class="headerlink" title="合體！"></a>合體！</h4><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=n;i&gt;<span class="number">0</span>;i--) &#123;</span><br><span class="line">    <span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;i;j++&gt;) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;#&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h3 id="將第一層與第二層合併"><a href="#將第一層與第二層合併" class="headerlink" title="將第一層與第二層合併"></a>將第一層與第二層合併</h3><h2 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h2><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> n;</span><br><span class="line">  <span class="type">int</span> i, j;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; ij; j++) &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;#&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (i = n; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;#&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="解題心得"><a href="#解題心得" class="headerlink" title="解題心得"></a>解題心得</h2><ul><li>我剛開始解這題，一直把它侷限在用一個大迴圈包數個小迴圈的巢狀結構去解。沒想到換個思路後，解起來比較輕鬆。<br>不要太過於執著一把幹到底</li><li>對於<code>巢狀迴圈</code>有更多的了解了！</li><li>我解題會把迴圈拆的一個步驟一個迴圈去想，一次處裡多個迴圈我腦子會炸！</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;題目&quot;&gt;&lt;a href=&quot;#題目&quot; class=&quot;headerlink&quot; title=&quot;題目:&quot;&gt;&lt;/a&gt;題目:&lt;/h1&gt;&lt;h4 id=&quot;出處：SA-流-C-競程修練心法&quot;&gt;&lt;a href=&quot;#出處：SA-流-C-競程修練心法&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="演算法筆記" scheme="http://yudong-0222.github.io/categories/%E6%BC%94%E7%AE%97%E6%B3%95%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="競程" scheme="http://yudong-0222.github.io/tags/%E7%AB%B6%E7%A8%8B/"/>
    
    <category term="題解" scheme="http://yudong-0222.github.io/tags/%E9%A1%8C%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>TOJ 104 星星樹</title>
    <link href="http://yudong-0222.github.io/post/cpp2"/>
    <id>http://yudong-0222.github.io/post/cpp2</id>
    <published>2022-11-06T11:34:14.169Z</published>
    <updated>2023-01-02T09:42:45.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="toj-104-星星樹"><a href="#toj-104-星星樹" class="headerlink" title="toj 104 星星樹"></a>toj 104 星星樹</h1><p><a class="link"   href="https://toj.tfcis.org/oj/pro/104/" >星星樹<i class="fa-solid fa-up-right-from-square"></i></a> 是這次我要練習的題目。<br>與巢狀迴圈有關。</p><h2 id="題目"><a href="#題目" class="headerlink" title="題目:"></a>題目:</h2><p>大家都知道，星星是長在樹上的。星星樹，自然就是上面長了星星的樹。</p><p>園丁JD3工作是專門維護長在資訊社社部的星星樹。工作包括每天澆水，拔雜草，防治蟲害（DEBUG）等等。當然，還有把星星樹定期修剪成整齊的形狀。</p><p>星星樹的樹枝發展相當有規律，呈現層狀。一棵好看的星星樹並且從樹的底端開始，往上呈現整齊的圓錐狀。為了保持穩定不傾倒，每一層的星星會修剪的比下面一層少正好兩顆。星星樹最頂端，則總是最閃亮的，那一顆的星星。</p><blockquote><p>輸入說明</p></blockquote><p><code>一個數字N，代表星星樹的高度。</code></p><blockquote><p>輸出說明</p></blockquote><p><code>星星樹。</code></p><blockquote><p>範例輸入</p></blockquote><p><code>4</code></p><blockquote><p>範例輸出</p></blockquote><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   *</span><br><span class="line">  ***</span><br><span class="line"> *****</span><br><span class="line">*******</span><br></pre></td></tr></table></figure></div><h2 id="思考方法"><a href="#思考方法" class="headerlink" title="思考方法"></a>思考方法</h2><p>首先，我將發生的事情寫下來，設了兩個變數: wall, space</p><div class="highlight-container" data-rel="Html"><figure class="iseeu highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 0 space 7 #</span><br><span class="line">// 1 space 5 #</span><br><span class="line">// 2 space 3 #</span><br><span class="line">// 3 space 1 #</span><br><span class="line"></span><br><span class="line">// space wall</span><br></pre></td></tr></table></figure></div><p>再來，利用迴圈完成。<br>大概就出來了。</p><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> n;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123; <span class="comment">//大迴圈: 次數</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> space = <span class="number">1</span>; space &lt; n-i; space++) &#123; <span class="comment">//空白處理迴圈- </span></span><br><span class="line">    <span class="comment">//空白由上往下遞減.</span></span><br><span class="line">      cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> wall = <span class="number">0</span>; wall &lt; <span class="number">2</span>*i+<span class="number">1</span>; wall++) &#123; <span class="comment">//2*i+1 為奇數</span></span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;*&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;toj-104-星星樹&quot;&gt;&lt;a href=&quot;#toj-104-星星樹&quot; class=&quot;headerlink&quot; title=&quot;toj 104 星星樹&quot;&gt;&lt;/a&gt;toj 104 星星樹&lt;/h1&gt;&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://to</summary>
      
    
    
    
    <category term="演算法筆記" scheme="http://yudong-0222.github.io/categories/%E6%BC%94%E7%AE%97%E6%B3%95%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="競程" scheme="http://yudong-0222.github.io/tags/%E7%AB%B6%E7%A8%8B/"/>
    
    <category term="題解" scheme="http://yudong-0222.github.io/tags/%E9%A1%8C%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>巢狀迴圈－三角形繪製１</title>
    <link href="http://yudong-0222.github.io/post/cpp"/>
    <id>http://yudong-0222.github.io/post/cpp</id>
    <published>2022-11-05T17:01:01.000Z</published>
    <updated>2023-01-02T10:07:40.571Z</updated>
    
    <content type="html"><![CDATA[<h1 id="巢狀迴圈"><a href="#巢狀迴圈" class="headerlink" title="巢狀迴圈"></a>巢狀迴圈</h1><p><strong>巢狀迴圈</strong>  迴圈包覆著迴圈。</p><p>在解題時，我會將想法先列出來 再一個一個去假設變數..or loop 等等。 </p><h2 id="範例題目"><a href="#範例題目" class="headerlink" title="範例題目:"></a><em>範例題目:</em></h2><p><strong>範例輸入</strong></p><blockquote><p> 5  </p></blockquote><p><strong>範例輸出</strong></p><blockquote><p>$<br>$$<br>$$$<br>$$$$<br>$$$$$</p></blockquote><h2 id="思考方法"><a href="#思考方法" class="headerlink" title="思考方法:"></a>思考方法:</h2><ol><li>要做幾次 ?</li><li>要輸出幾個 <strong>$</strong> ?</li><li>最後再輸出換行 “\n”</li></ol><h1 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h1><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;n;i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>;j&lt;i;j++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;$&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;巢狀迴圈&quot;&gt;&lt;a href=&quot;#巢狀迴圈&quot; class=&quot;headerlink&quot; title=&quot;巢狀迴圈&quot;&gt;&lt;/a&gt;巢狀迴圈&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;巢狀迴圈&lt;/strong&gt;  迴圈包覆著迴圈。&lt;/p&gt;
&lt;p&gt;在解題時，我會將想法先列出來 再一個一個去假設</summary>
      
    
    
    
    <category term="演算法筆記" scheme="http://yudong-0222.github.io/categories/%E6%BC%94%E7%AE%97%E6%B3%95%E7%AD%86%E8%A8%98/"/>
    
    
    <category term="code" scheme="http://yudong-0222.github.io/tags/code/"/>
    
    <category term="競程" scheme="http://yudong-0222.github.io/tags/%E7%AB%B6%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第一篇文章 - Hello World</title>
    <link href="http://yudong-0222.github.io/post/1st"/>
    <id>http://yudong-0222.github.io/post/1st</id>
    <published>2022-11-05T07:26:46.000Z</published>
    <updated>2022-12-28T11:56:27.301Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World!"></a>Hello World!</h1><p>這裡是我用來記錄我所學，關於競程的筆記部落格！<br>內容可能包含:</p><ul><li>題解過程</li><li>語法</li><li>演算法</li><li>資料結構<br>…等 競程中常使用到的相關東西！</li></ul><p> <strong>這裡是用Hexo前端技術架設!</strong></p><h2 id="hexo框架特點"><a href="#hexo框架特點" class="headerlink" title="hexo框架特點:"></a>hexo框架特點:</h2><ul><li>你可以使用MARKDOWN 語法來寫!</li></ul><ul><li>編輯快速 使用node.js</li><li>可以與Github Pages heroku…等 部屬網站。</li><li>豐富的外掛系統</li></ul><h4 id="之後我會在這邊發布一些我競程學習的東西-也歡迎大家一起交流"><a href="#之後我會在這邊發布一些我競程學習的東西-也歡迎大家一起交流" class="headerlink" title="之後我會在這邊發布一些我競程學習的東西~ 也歡迎大家一起交流"></a>之後我會在這邊發布一些我競程學習的東西~ 也歡迎大家一起交流</h4><h2 id="其他頁面"><a href="#其他頁面" class="headerlink" title="其他頁面:"></a>其他頁面:</h2><p><strong>你可以按上面的按鈕導航(手機則為</strong> <em>三條線</em> <strong>)，看看一些不一樣的東西</strong></p>]]></content>
    
    
    <summary type="html">第一篇文章...(點擊查看更多)</summary>
    
    
    
    
  </entry>
  
</feed>
